{"mappings":"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","sources":["src/js/script.js","src/js/pagination.js"],"sourcesContent":["  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\n  const API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const searchURL = BASE_URL + '/search/movie?' + API_KEY;\n  const getGenres = BASE_URL + '/genre/movie/list?' + API_KEY;   \n\n  //localStorage\n  let currentMovieTitle, currentMovieID, queue, watched;\n  JSON.parse(localStorage.getItem(\"movie-queue\")) === null ? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\n  localStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n\n  JSON.parse(localStorage.getItem(\"movie-watched\")) === null ? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\"));\n  localStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n\n\n  // MODAL SECTION\nconst modal = document.getElementById('myModal');\nconst modalPoster = document.getElementById('modal-poster');\nconst modalTitle = document.getElementById('modal-title');\nconst modalVote = document.getElementById('modal-vote');\nconst modalPopularity = document.getElementById('modal-popularity');\nconst modalOrigTitle = document.getElementById('modal-original-title');\nconst modalGenre = document.getElementById('modal-genre');\nconst modalOverview = document.getElementById('modal-overview');\nconst addToWatchedBtn = document.getElementById('addToWatchedBtn');\nconst addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\n  \nlet genres;\n\nfetch(getGenres)\n    .then(response => response.json())\n    .then(data => {\n        genres = data.genres;\n      // getMovies(API_URL, genres); // Call getMovies with genres\n      showMovies(data, genres)\n    })\n    .catch(error => {\n        // console.error('Error fetching genres:', error);\n    });\n\n    fetch(API_URL)\n    .then(response => response.json())\n    .then(data => {\n        showMovies(data.results, genres);\n    })\n    .catch(error => {\n        console.error('Error fetching movies:', error);\n    });\n  // function to open the modal with movie details\nfunction openModal(movie) {\n\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title.toUpperCase();\n    modalVote.textContent =\n      movie.vote_average.toFixed(1) + '   /   ' + movie.vote_count;\n    modalPopularity.textContent = movie.popularity.toFixed(1);\n    modalOrigTitle.textContent = movie.original_title.toUpperCase();\n    // modalGenre.textContent = movie.genre;\n\n    const movieGenres = movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n    }).join(', ');\n    \n    modalGenre.textContent = movieGenres;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = 'block';\n  }\n\n  // function to close the modal\nfunction closeModal() {\n    modal.style.display = 'none';\n  }\n\n  // event listener for the close button\n  closeBtn.addEventListener('click', closeModal);\n\n  // event listener for clicks outside the modal\n  window.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n\n  const main = document.getElementById('main');\n  const form = document.getElementById('search-form');\n  const search = document.getElementById('search-input');\n  // const galleryEl = document.getElementById('gallery');\n  const loader = document.querySelector('.loader-container');\n  \n  // PAGINATION\nlet lastUrl;\nlet prev, next;\n  getMovies(API_URL);\n  // DISPLAY MOVIE CARDS\n  function getMovies(url) {\n    lastUrl = url;\n    \n    main.classList.toggle('is-hidden');\n    loader.classList.toggle('is-hidden');\n    \n    fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data.results);\n      if (data.results.length !== 0) {\n        showMovies(data.results);\n        currentPage = data.page;\n        nextPage = currentPage + 1;\n        prevPage = currentPage - 1;\n        totalPages = data.total_pages;\n        main.classList.toggle('is-hidden');\n        loader.classList.toggle('is-hidden');\n        \n        document.addEventListener('DOMContentLoaded', function () {\n          const current = document.getElementById('current');\n          current.innerText = currentPage;\n        })\n          if (currentPage <= 1) {\n          if (prev)  prev.classList.add('disabled');\n          if (next) next.classList.remove('disabled');\n          } else if (currentPage >= totalPages) {\n          if (prev)  prev.classList.remove('disabled');\n          if (next)  next.classList.add('disabled');\n          } else {\n           if (prev)  prev.classList.remove('disabled');\n           if (next)  next.classList.remove('disabled');\n        }\n        \n        } else {\n          main.classList.toggle('is-hidden');\n          loader.classList.toggle('is-hidden');\n          main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n        }\n    });\n    // Add event listeners for prev and next inside this block\n            prev = document.getElementById('prev');\n            next = document.getElementById('next');\n\n            // function for previous page\n    if (prev) {\n      prev.addEventListener('click', () => {\n        if (prevPage > 0) {\n          pageCall(prevPage);\n        }\n      });\n    }\n            // function for the next page\n    if (next) {\n      next.addEventListener('click', () => {\n        if (nextPage <= totalPages) {\n          pageCall(nextPage);\n        }\n      });\n    }\n  }\n  \n  function showMovies(data) {\n    main.innerHTML = '';\n    data.forEach(movie => {\n      const { title, poster_path, release_date, genre_ids } = movie;\n      const movieEl = document.createElement('div');\n      movieEl.classList.add('movie');\n\n      const movieGenres = genre_ids && Array.isArray(genres)\n        ? genre_ids.map(genreId => {\n          const genre = genres.find(genre => genre.id === genreId);\n          return genre ? genre.name : '';\n        }).join(', ')\n        : '';\n      \n      movieEl.innerHTML = `\n            <img src=\"${poster_path\n          ? IMG_URL + poster_path\n          : 'http:/>/via.placeholder.com/1080x1500'\n        }\"\n                alt=\"${title}\"/>\n            \n            <div class=\"movie-info\">\n                <h3>${title.toUpperCase()}</h3>\n                <div class=\"movie-details\">\n                <div>${movieGenres} | ${release_date.slice(0,4)}</div>\n                </div>\n            </div>        \n                  `;\n      movieEl.addEventListener('click', function () {\n        openModal(movie);\n      });\n      main.appendChild(movieEl);\n    });\n  }\n\nform.addEventListener('submit', e => {\n    e.preventDefault();\n\n    const searchTerm = search.value;\n\n    if (searchTerm) {\n      getMovies(searchURL + '&query=' + searchTerm);\n    } else {\n      getMovies(API_URL);\n    }\n  });\n\n  // function for previous page\n  prev.addEventListener('click', () => {\n    if (prevPage > 0) {\n      pageCall(prevPage);\n    }\n  });\n\n  // function for the next page\n  next.addEventListener('click', () => {\n    if (nextPage <= totalPages) {\n      pageCall(nextPage);\n    }\n  });\n\nexport function pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if (key[0] != 'page') {\n      let url = lastUrl + '&page=' + page;\n      getMovies(url);\n    } else {\n      key[1] = page.toString();\n      let a = key.join('=');\n      queryParams[queryParams.length - 1] = a;\n      let b = queryParams.join('&');\n      let url = urlSplit[0] + '?' + b;\n      getMovies(url);\n    }\n  }\n\n\n  //Clicking a movie\nmain.addEventListener('click', e => {\n    let currentMovie = e.target.parentElement;\n    currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n    console.log(currentMovieTitle);\n  });\n\n  //Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been watched already`)\n      : watched.push(currentMovieTitle);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  });\n\n  //Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been added to the queue already`)\n      : queue.push(currentMovieTitle);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  });\n\n  //Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been watched already`) :\n      watched.push(currentMovieID);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  })\n\n  //Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been added to the queue already`) :\n      queue.push(currentMovieID);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  })\n\n\n\n  //Pressing escape to close modal\ndocument.body.addEventListener('keydown', event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n})\n","import { pageCall } from './script.js';\n\n\nconst totalPages = 20; \nconst paginationContainer = document.querySelector('.pagination');\n\n// Function to generate pagination buttons\nfunction generatePaginationButtons(currentPage) {\n  let buttonsHTML = '';\n  const numButtonsToShow = 5; // Number of pagination buttons to show\n\n  let startPage = 1;\n  if (currentPage <= 3) {\n    startPage = 1;\n  } else if (currentPage >= totalPages - 1) {\n    startPage = totalPages - numButtonsToShow + 1;\n  } else {\n    startPage = currentPage - 2;\n    if (startPage % 2 === 0) {\n      startPage -= 1;\n    }\n  }\n\n  if (startPage > 1) {\n    buttonsHTML += `<button class=\"pagination-button previous-page\" type=\"submit\" id=\"prev\">&#11164</button>`;\n    buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">1</button>`;\n    if (startPage > 2) {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">...</button>`;\n    }\n  }\n\n  for (let i = startPage; i <= totalPages && i < startPage + numButtonsToShow; i++) {\n    if (i === currentPage) {\n      buttonsHTML += `<button class=\"pagination-button current-page\" type=\"submit\">${i}</button>`;\n    } else {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">${i}</button>`;\n    }\n  }\n\n  if (startPage + numButtonsToShow <= totalPages) {\n    if (startPage + numButtonsToShow < totalPages) {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">...</button>`;\n    }\n    buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">${totalPages}</button>`;\n  }\n\n  if (currentPage < totalPages) {\n    buttonsHTML += `<button class=\"pagination-button next-page\" type=\"submit\" id=\"next\">&#11166</button>`;\n  }\n\n  paginationContainer.innerHTML = buttonsHTML;\n}\n\nlet currentPage = 1; // Initialize current page number\ngeneratePaginationButtons(currentPage);\n\n// Event listener for pagination container\npaginationContainer.addEventListener('click', (event) => {\n  const targetButton = event.target;\n  \n  if (targetButton.classList.contains('pagination-button') && !targetButton.id) {\n    const pageNumber = parseInt(targetButton.textContent);\n    if (!isNaN(pageNumber)) {\n      currentPage = pageNumber; // Update currentPage variable\n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n\n  else if (targetButton.classList.contains('previous-page')) {\n    if (currentPage > 1) {\n      currentPage--; \n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n \n  else if (targetButton.classList.contains('next-page')) {\n    if (currentPage < totalPages) {\n      currentPage++; \n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n});"],"names":["$1ee2b6306238ec66$var$API_URL","$1ee2b6306238ec66$var$BASE_URL","$1ee2b6306238ec66$var$currentMovieTitle","$1ee2b6306238ec66$var$queue","$1ee2b6306238ec66$var$watched","JSON","parse","localStorage","getItem","setItem","stringify","$1ee2b6306238ec66$var$modal","document","getElementById","$1ee2b6306238ec66$var$modalPoster","$1ee2b6306238ec66$var$modalTitle","$1ee2b6306238ec66$var$modalVote","$1ee2b6306238ec66$var$modalPopularity","$1ee2b6306238ec66$var$modalOrigTitle","$1ee2b6306238ec66$var$modalGenre","$1ee2b6306238ec66$var$modalOverview","$1ee2b6306238ec66$var$addToWatchedBtn","$1ee2b6306238ec66$var$addToQueuBtn","$1ee2b6306238ec66$var$closeBtn","getElementsByClassName","$1ee2b6306238ec66$var$genres","$1ee2b6306238ec66$var$closeModal","style","display","fetch","then","response","json","data","genres","$1ee2b6306238ec66$var$showMovies","catch","error","results","console","addEventListener","window","event","target","$1ee2b6306238ec66$var$main","$1ee2b6306238ec66$var$form","$1ee2b6306238ec66$var$search","$1ee2b6306238ec66$var$loader","querySelector","$1ee2b6306238ec66$var$lastUrl","$1ee2b6306238ec66$var$prev","$1ee2b6306238ec66$var$next","$1ee2b6306238ec66$var$getMovies","url","classList","toggle","res","log","length","currentPage","page","nextPage","prevPage","totalPages","total_pages","innerText","add","remove","innerHTML","$1ee2b6306238ec66$export$26f0a13c57387c91","forEach","movie","title","poster_path","release_date","genre_ids","movieEl","createElement","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","toUpperCase","slice","src","textContent","vote_average","toFixed","vote_count","popularity","original_title","genre1","overview","$1ee2b6306238ec66$var$openModal","appendChild","urlSplit","split","queryParams","key","toString","a","b","e","preventDefault","searchTerm","value","$1ee2b6306238ec66$var$searchURL","currentMovie","parentElement","lastElementChild","firstElementChild","includes","alert","push","$1ee2b6306238ec66$var$currentMovieID","body","code","$1bab9c519cfa82bc$var$paginationContainer","$1bab9c519cfa82bc$var$generatePaginationButtons","currentPage1","buttonsHTML","startPage","$1bab9c519cfa82bc$var$totalPages","i","$1bab9c519cfa82bc$var$currentPage","targetButton","contains","pageNumber","parseInt","isNaN"],"version":3,"file":"library.1ee370a1.js.map"}