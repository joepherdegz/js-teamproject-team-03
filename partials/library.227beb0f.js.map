{"mappings":"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","sources":["src/js/script.js","src/js/pagination.js"],"sourcesContent":["  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\n  const API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&include_adult=false&' + API_KEY;\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const searchURL = BASE_URL + '/search/movie?' + API_KEY;\n  const getGenres = BASE_URL + '/genre/movie/list?' + API_KEY;   \n\n  //localStorage\n  let currentMovieTitle, currentMovieID, queue, watched;\n  JSON.parse(localStorage.getItem(\"movie-queue\")) === null ? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\n  localStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n\n  JSON.parse(localStorage.getItem(\"movie-watched\")) === null ? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\"));\n  localStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n\n\n  // MODAL SECTION\nconst modal = document.getElementById('myModal');\nconst modalPoster = document.getElementById('modal-poster');\nconst modalTitle = document.getElementById('modal-title');\nconst modalVote = document.getElementById('modal-vote');\nconst modalPopularity = document.getElementById('modal-popularity');\nconst modalOrigTitle = document.getElementById('modal-original-title');\nconst modalGenre = document.getElementById('modal-genre');\nconst modalOverview = document.getElementById('modal-overview');\nconst addToWatchedBtn = document.getElementById('addToWatchedBtn');\nconst addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\n  \nlet genres;\n\nfetch(getGenres)\n    .then(response => response.json())\n    .then(data => {\n        genres = data.genres;\n      // getMovies(API_URL, genres); // Call getMovies with genres\n      showMovies(data, genres)\n    })\n    .catch(error => {\n        // console.error('Error fetching genres:', error);\n    });\n\n    // fetch(API_URL)\n    // .then(response => response.json())\n    // .then(data => {\n    //     showMovies(data.results, genres);\n    // })\n    // .catch(error => {\n    //     console.error('Error fetching movies:', error);\n    // });\n  // function to open the modal with movie details\nfunction openModal(movie) {\n\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title.toUpperCase();\n    modalVote.textContent =\n      movie.vote_average.toFixed(1) + '   /   ' + movie.vote_count;\n    modalPopularity.textContent = movie.popularity.toFixed(1);\n    modalOrigTitle.textContent = movie.original_title.toUpperCase();\n    // modalGenre.textContent = movie.genre;\n\n    const movieGenres = movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n    }).join(', ');\n    \n    modalGenre.textContent = movieGenres;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = 'block';\n  }\n\n  // function to close the modal\nfunction closeModal() {\n    modal.style.display = 'none';\n  }\n\n  // event listener for the close button\n  closeBtn.addEventListener('click', closeModal);\n\n  // event listener for clicks outside the modal\n  window.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n\n  const main = document.getElementById('main');\n  const form = document.getElementById('search-form');\n  const search = document.getElementById('search-input');\n  // const galleryEl = document.getElementById('gallery');\n  const loader = document.querySelector('.loader-container');\n  \n  // PAGINATION\nlet lastUrl;\n// let prev, next;\nlet currentPage = 1; // Initialize currentPage variable\nlet nextPage, prevPage, totalPages;\nconst prev = document.getElementById('prev');\nconst next = document.getElementById('next');\n\n  getMovies(API_URL);\n  // DISPLAY MOVIE CARDS\n  function getMovies(url) {\n    lastUrl = url;\n    \n    main.classList.toggle('is-hidden');\n    loader.classList.toggle('is-hidden');\n    \n    fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data.results);\n      if (data.results.length !== 0) {\n        showMovies(data.results);\n        currentPage = data.page;\n        nextPage = currentPage + 1;\n        prevPage = currentPage - 1;\n        totalPages = data.total_pages;\n        main.classList.toggle('is-hidden');\n        loader.classList.toggle('is-hidden');\n\n        updatePaginationButtons(); // Update pagination buttons\n        \n        // document.addEventListener('DOMContentLoaded', function () {\n        //   const current = document.getElementById('current');\n        //   current.innerText = currentPage;\n        // })\n        } else {\n            main.classList.toggle('is-hidden');\n            loader.classList.toggle('is-hidden');\n            main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n        }\n    \n \n      function updatePaginationButtons() {\n        if (currentPage <= 1) {\n          if (prev) prev.classList.add('disabled');\n          if (next) next.classList.remove('disabled');\n        } else if (currentPage >= totalPages) {\n          if (prev) prev.classList.remove('disabled');\n          if (next) next.classList.add('disabled');\n        } else {\n          if (prev) prev.classList.remove('disabled');\n          if (next) next.classList.remove('disabled');\n        }\n        prev.addEventListener('click', () => {\n    if (prevPage > 0) {\n        pageCall(prevPage);\n    }\n});\n\n// Event listener for the next page\nnext.addEventListener('click', () => {\n    if (nextPage <= totalPages) {\n        pageCall(nextPage);\n    }\n});\n        // } else {\n        //   main.classList.toggle('is-hidden');\n        //   loader.classList.toggle('is-hidden');\n        //   main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n        // }\n      }\n    });\n   \n  }\n  getMovies(API_URL);\n\n  function showMovies(data) {\n    main.innerHTML = '';\n    data.forEach(movie => {\n      const { title, poster_path, release_date, genre_ids } = movie;\n      const movieEl = document.createElement('div');\n      movieEl.classList.add('movie');\n\n      const movieGenres = genre_ids && Array.isArray(genres)\n        ? genre_ids.map(genreId => {\n          const genre = genres.find(genre => genre.id === genreId);\n          return genre ? genre.name : '';\n        }).join(', ')\n        : '';\n      \n      movieEl.innerHTML = `\n            <img src=\"${poster_path\n          ? IMG_URL + poster_path\n          : 'http:/>/via.placeholder.com/1080x1500'\n        }\"\n                alt=\"${title}\"/>\n            \n            <div class=\"movie-info\">\n                <h3>${title.toUpperCase()}</h3>\n                <div class=\"movie-details\">\n                <div>${movieGenres} | ${release_date.slice(0,4)}</div>\n                </div>\n            </div>        \n                  `;\n      movieEl.addEventListener('click', function () {\n        openModal(movie);\n      });\n      main.appendChild(movieEl);\n    });\n  }\n\nform.addEventListener('submit', e => {\n    e.preventDefault();\n\n    const searchTerm = search.value;\n\n    if (searchTerm) {\n      getMovies(searchURL + '&query=' + searchTerm);\n    } else {\n      getMovies(API_URL);\n    }\n  });\n\n  // function for previous page\n  // prev.addEventListener('click', () => {\n  //   if (prevPage > 0) {\n  //     pageCall(prevPage);\n  //   }\n  // });\n\n  // // function for the next page\n  // next.addEventListener('click', () => {\n  //   if (nextPage <= totalPages) {\n  //     pageCall(nextPage);\n  //   }\n  // });\n\nexport function pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if (key[0] != 'page') {\n      let url = lastUrl + '&page=' + page;\n      getMovies(url);\n    } else {\n      key[1] = page.toString();\n      let a = key.join('=');\n      queryParams[queryParams.length - 1] = a;\n      let b = queryParams.join('&');\n      let url = urlSplit[0] + '?' + b;\n      getMovies(url);\n    }\n  }\n\n\n  //Clicking a movie\nmain.addEventListener('click', e => {\n    let currentMovie = e.target.parentElement;\n    currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n    console.log(currentMovieTitle);\n  });\n\n  //Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been watched already`)\n      : watched.push(currentMovieTitle);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  });\n\n  //Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been added to the queue already`)\n      : queue.push(currentMovieTitle);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  });\n\n  //Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been watched already`) :\n      watched.push(currentMovieID);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  })\n\n  //Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been added to the queue already`) :\n      queue.push(currentMovieID);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  })\n\n\n\n  //Pressing escape to close modal\ndocument.body.addEventListener('keydown', event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n})\n","import { pageCall } from './script.js';\n\n\nconst totalPages = 20; \nconst paginationContainer = document.querySelector('.pagination');\n\n// Function to generate pagination buttons\nfunction generatePaginationButtons(currentPage) {\n  let buttonsHTML = '';\n  const numButtonsToShow = 5; // Number of pagination buttons to show\n\n  let startPage = 1;\n  if (currentPage <= 3) {\n    startPage = 1;\n  } else if (currentPage >= totalPages - 1) {\n    startPage = totalPages - numButtonsToShow + 1;\n  } else {\n    startPage = currentPage - 2;\n    if (startPage % 2 === 0) {\n      startPage -= 1;\n    }\n  }\n\n  if (startPage > 1) {\n    buttonsHTML += `<button class=\"pagination-button previous-page\" type=\"submit\" id=\"prev\">&#11164</button>`;\n    buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">1</button>`;\n    if (startPage > 2) {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">...</button>`;\n    }\n  }\n\n  for (let i = startPage; i <= totalPages && i < startPage + numButtonsToShow; i++) {\n    if (i === currentPage) {\n      buttonsHTML += `<button class=\"pagination-button current-page\" type=\"submit\">${i}</button>`;\n    } else {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">${i}</button>`;\n    }\n  }\n\n  if (startPage + numButtonsToShow <= totalPages) {\n    if (startPage + numButtonsToShow < totalPages) {\n      buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">...</button>`;\n    }\n    buttonsHTML += `<button class=\"pagination-button\" type=\"submit\">${totalPages}</button>`;\n  }\n\n  if (currentPage < totalPages) {\n    buttonsHTML += `<button class=\"pagination-button next-page\" type=\"submit\" id=\"next\">&#11166</button>`;\n  }\n\n  paginationContainer.innerHTML = buttonsHTML;\n}\n\nlet currentPage = 1; // Initialize current page number\ngeneratePaginationButtons(currentPage);\n\n// Event listener for pagination container\npaginationContainer.addEventListener('click', (event) => {\n  const targetButton = event.target;\n  \n  if (targetButton.classList.contains('pagination-button') && !targetButton.id) {\n    const pageNumber = parseInt(targetButton.textContent);\n    if (!isNaN(pageNumber)) {\n      currentPage = pageNumber; // Update currentPage variable\n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n\n  else if (targetButton.classList.contains('previous-page')) {\n    if (currentPage > 1) {\n      currentPage--; \n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n \n  else if (targetButton.classList.contains('next-page')) {\n    if (currentPage < totalPages) {\n      currentPage++; \n      generatePaginationButtons(currentPage); \n      pageCall(currentPage);\n    }\n  }\n});"],"names":["$66b821ea461d9f2a$var$currentMovieTitle","$66b821ea461d9f2a$var$currentMovieID","$66b821ea461d9f2a$var$queue","$66b821ea461d9f2a$var$watched","$66b821ea461d9f2a$var$API_KEY","$66b821ea461d9f2a$var$API_URL","$66b821ea461d9f2a$var$BASE_URL","JSON","parse","localStorage","getItem","setItem","stringify","$66b821ea461d9f2a$var$genres","$66b821ea461d9f2a$var$modal","document","getElementById","$66b821ea461d9f2a$var$modalPoster","$66b821ea461d9f2a$var$modalTitle","$66b821ea461d9f2a$var$modalVote","$66b821ea461d9f2a$var$modalPopularity","$66b821ea461d9f2a$var$modalOrigTitle","$66b821ea461d9f2a$var$modalGenre","$66b821ea461d9f2a$var$modalOverview","$66b821ea461d9f2a$var$addToWatchedBtn","$66b821ea461d9f2a$var$addToQueuBtn","$66b821ea461d9f2a$var$closeBtn","getElementsByClassName","$66b821ea461d9f2a$var$closeModal","style","display","fetch","then","response","json","data","genres","$66b821ea461d9f2a$var$showMovies","catch","error","addEventListener","window","event","target","$66b821ea461d9f2a$var$lastUrl","$66b821ea461d9f2a$var$nextPage","$66b821ea461d9f2a$var$prevPage","$66b821ea461d9f2a$var$totalPages","$66b821ea461d9f2a$var$main","$66b821ea461d9f2a$var$form","$66b821ea461d9f2a$var$search","$66b821ea461d9f2a$var$loader","querySelector","$66b821ea461d9f2a$var$currentPage","$66b821ea461d9f2a$var$prev","$66b821ea461d9f2a$var$next","$66b821ea461d9f2a$var$getMovies","url","classList","toggle","res","console","log","results","length","page","total_pages","add","remove","$66b821ea461d9f2a$export$26f0a13c57387c91","updatePaginationButtons","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","movieEl","createElement","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","concat","toUpperCase","slice","src","textContent","vote_average","toFixed","vote_count","popularity","original_title","genre1","overview","$66b821ea461d9f2a$var$openModal","appendChild","urlSplit","split","queryParams","key","toString","a","b","e","preventDefault","searchTerm","value","$66b821ea461d9f2a$var$searchURL","currentMovie","parentElement","lastElementChild","firstElementChild","innerText","includes","alert","push","body","code","$dfaf77c789ce7a24$var$totalPages","$dfaf77c789ce7a24$var$paginationContainer","$dfaf77c789ce7a24$var$generatePaginationButtons","currentPage1","buttonsHTML","startPage","i","$dfaf77c789ce7a24$var$currentPage","targetButton","contains","pageNumber","parseInt","isNaN"],"version":3,"file":"library.227beb0f.js.map"}