{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC1C,MAGMC,EAAaF,SAASG,eAAe,eACrCC,EAAWJ,SAASG,eAAe,aACnCE,EAAkBL,SAASM,cAAc,YAC/C,IAAIC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBAChDC,EAAeJ,KAAKC,MAAMC,aAAaC,QAAQ,gBAUnDE,eAAeC,EAAaC,GACxBV,EAAgBW,UAAY,GAC5B,IAAK,MAAMC,KAAWF,EAClB,IACI,GAAKG,MAAMD,IAAwB,OAAZA,EAKvB,MAAM,IAAIE,MAAM,qBAAqBF,KALI,CACzC,MACMG,EAAeC,QADDC,EAAoBL,IAExCZ,EAAgBkB,YAAYH,E,EAI9B,MAAOI,GACiB,qBAAlBA,EAAMC,QACNC,QAAQC,KAAK,iBAAiBV,gBAE9BS,QAAQF,MAAM,2BAA4BA,E,EAM1DX,eAAeS,EAAoBL,GAC/B,MAAMW,EAAM,sCAAqBX,6CAC3BY,QAAiBC,MAAMF,GAC7B,IAAKC,EAASE,GACV,MAAwB,MAApBF,EAASG,OACH,IAAIb,MAAM,oBAEV,IAAIA,MAAM,kCAAoCU,EAASI,YAIrE,aAD2BJ,EAASK,M,CAIxC,SAASb,EAAmBc,GACxB,MAAMC,EAAUpC,SAASqC,cAAc,OAMvC,OALAD,EAAQE,UAAUC,IAAI,SACtBH,EAAQpB,UAAY,uBACRmB,EAAMK,YAtDN,kCAsD8BL,EAAMK,YAAc,yDACxDL,EAAMM,mBAELL,C,CAnDXlC,EAAWD,iBAAiB,SAAS,SAAUyC,GAC3CA,EAAEC,iBACF7B,EAAaP,E,IAEjBH,EAASH,iBAAiB,SAAS,SAAUyC,GACzCA,EAAEC,iBACF7B,EAAaF,E","sources":["src/js/library.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n    const BASE_URL = 'https://api.themoviedb.org/3';\n    const API_KEY = 'b5e824a3d922f68ba211fcf6dbdcb6f5';\n    const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    const watchedBtn = document.getElementById('watched-btn');\n    const queueBtn = document.getElementById('queue-btn');\n    const moviesContainer = document.querySelector('.gallery');\n    let watchedMovies = JSON.parse(localStorage.getItem('movie-watched'));\n    let queuedMovies = JSON.parse(localStorage.getItem('movie-queue'));\n    watchedBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n        getLibMovies(watchedMovies);\n    });\n    queueBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n        getLibMovies(queuedMovies);\n    });\n    // Load movies whose Ids matched with those stored in the localStorage\n    async function getLibMovies(array) {\n        moviesContainer.innerHTML = '';\n        for (const movieId of array) {\n            try {\n                if (!isNaN(movieId) && movieId !== null) {\n                const movie = await getMovieDetailsById(movieId);\n                const movieElement = createMovieElement(movie);\n                moviesContainer.appendChild(movieElement);\n            } else {\n                throw new Error(`Invalid movie ID: ${movieId}`);\n            }\n            } catch (error) {\n                if (error.message === 'Movie not found.') {\n                    console.warn(`Movie with ID ${movieId} not found.`);\n                } else {\n                    console.error('Failed to display movie:', error);\n                }\n            }\n        }\n    }\n    // Requesting movies using IDs\n    async function getMovieDetailsById(movieId) {\n        const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n        const response = await fetch(url);\n        if (!response.ok) {\n            if (response.status === 404) {\n                throw new Error('Movie not found.');\n            } else {\n                throw new Error('Failed to fetch movie details: ' + response.statusText);\n            }\n        }\n        const movieDetails = await response.json();\n        return movieDetails;\n    }\n    // Create movie display\n    function createMovieElement(movie) {\n        const element = document.createElement('div');\n        element.classList.add('movie');\n        element.innerHTML = `\n        <img src=\"${movie.poster_path ? IMG_URL + movie.poster_path : 'http://via.placeholder.com/1080x1500'}\";\n        <h3>${movie.title}</h3>\n    `;\n        return element;\n    }\n    // function isValidMovieId(movieId) {\n    //     return !isNaN(movieId);\n    // }\n});"],"names":["document","addEventListener","watchedBtn","getElementById","queueBtn","moviesContainer","querySelector","watchedMovies","JSON","parse","localStorage","getItem","queuedMovies","async","getLibMovies","array","innerHTML","movieId","isNaN","Error","movieElement","createMovieElement","getMovieDetailsById","appendChild","error","message","console","warn","url","response","fetch","ok","status","statusText","json","movie","element","createElement","classList","add","poster_path","title","e","preventDefault"],"version":3,"file":"library.9745ddc2.js.map"}